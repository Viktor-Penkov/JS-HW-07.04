// Створіть масив об'єктів "студентів", який містить властивості "ім'я", "вік" та
// "рейтинг". Додайте до масиву метод "вітатися", який буде повертати рядок з
// привітанням зі зазначенням імені студента.

// Використовуючи метод "map()", створіть новий масив, який містить привітання з
// кожним студентом з масиву "студентів". Використовуючи метод "filter()", створіть
// новий масив, який містить тільки ті об'єкти типу "студент", які мають рейтинг
// вище заданого значення.

// Створіть функцію "додати*рейтинг", яка приймає один аргумент - кількість балів,
// на яку потрібно збільшити рейтинг студента. Викличте функцію "додати*рейтинг" на
// кожному елементі масиву "студентів". Перевірте, що в контексті функції
// "додати_рейтинг" значення "this" вказує на конкретний об'єкт "студент". Виведіть
// новий масив зі зміненими рейтингами в консоль.
const students = [
  {
    name: "Victor",
    age: 20,
    hp: 10,
  },
  {
    name: "Pavel",
    age: 30,
    hp: 20,
  },
  {
    name: "Anton",
    age: 28,
    hp: 30,
  },
];
const greatStudent = students.map((students) => `Привіт ${students.name}`);
console.log(greatStudent);
const ratingHp = (students, hp) =>
  students.filter((student) => student.hp > hp);
console.log(ratingHp(students, "25"));

// Створіть об'єкт "користувач" з властивостями "ім'я" та "баланс". Додайте до
// об'єкту метод "додати гроші", який збільшує баланс користувача на вказану суму.
// Додайте до об'єкту метод "вивести баланс", який виводить поточний баланс
// користувача в консоль.

// Створіть масив "користувачів", який містить кілька об'єктів типу "користувач".
// Використовуючи метод "forEach()", викличте метод "додати гроші" на кожному
// елементі масиву "користувачів". Використовуючи метод "filter()", створіть новий
// масив, який міститиме тільки ті об'єкти типу "користувач", у яких баланс більший
// за вказану суму. Використовуючи метод "map()", створіть новий масив, який
// містить баланс кожного користувача з масиву "користувачів". Виведіть цей масив в
// консоль.

// Використайте метод "call()", щоб викликати метод "вивести баланс" на конкретному
// об'єкті "користувач". Перевірте, що в контексті методу "вивести баланс" значення
// "this" вказує на конкретний об'єкт "користувач".

const user = {
  name: "Alice",
  balance: 500,
  PlusBalance(balanceChanged) {
    this.balance += balanceChanged;
  },
  balanceInfo() {
    console.log(`Balance : ${this.balance}`);
  },
};
const users = [
  { name: "Alice", balance: 500 },
  { name: "Bob", balance: 200 },
  { name: "Charlie", balance: 1000 },
];

users.forEach((value) => {
  user.PlusBalance.call(value, 300);
  user.balanceInfo.call(value);
});
const topbalance = (users, balance) =>
  users.filter((user) => user.balance > balance);
console.log(topbalance(users, "600"));

const userTopBalance = users.map((users) => users.balance);
console.log(userTopBalance);

